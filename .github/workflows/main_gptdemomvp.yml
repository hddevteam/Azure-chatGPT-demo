# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - gptdemomvp

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI: true
      CLOUD_INSTANCE: ${{ vars.CLOUD_INSTANCE }}
      TENANT_ID: ${{ secrets.TENANT_ID }}
      CLIENT_ID: ${{ secrets.CLIENT_ID }}
      REDIRECT_URI: ${{ vars.REDIRECT_URI }}
      POST_LOGOUT_REDIRECT_URI: ${{ vars.POST_LOGOUT_REDIRECT_URI }}
      SCOPES: ${{ secrets.SCOPES }}
      GRAPH_API_ENDPOINT: ${{ vars.GRAPH_API_ENDPOINT }}
      EXPRESS_SESSION_SECRET: ${{ secrets.EXPRESS_SESSION_SECRET }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: npm install, build, and test
        run: |
          npm install
          npm run build

      - name: Archive build artifacts
        run: zip release.zip ./* -r
        
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Extract build artifacts
        run: unzip release.zip

      - name: Remove the archive file
        run: rm release.zip
          
      - name: Backup .data directory
        run: |
          echo "创建.data目录备份..."
          timestamp=$(date +%Y%m%d_%H%M%S)
          mkdir -p backup
          
          # 从发布配置文件中提取凭据
          publish_profile="${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_57B881AC264A443E873FD5B027994B9B }}"
          username=$(echo "$publish_profile" | grep -oP '(?<=userName=")[^"]*')
          password=$(echo "$publish_profile" | grep -oP '(?<=userPWD=")[^"]*')
          
          # 使用Kudu API创建备份
          echo "执行远程备份命令..."
          curl -s -u "$username:$password" https://gptdemomvp.scm.azurewebsites.net/api/command \
               -d "{'command': 'bash -c \"cd /home/site/wwwroot && if [ -d \\\".data\\\" ]; then tar czf /home/site/data_backup.tar.gz .data; echo \\\"备份已创建\\\"; else echo \\\"没有找到.data目录\\\"; exit 0; fi\"'}" \
               -H "Content-Type: application/json"
          
          # 下载备份文件
          echo "下载备份文件..."
          curl -s -u "$username:$password" https://gptdemomvp.scm.azurewebsites.net/api/vfs/site/data_backup.tar.gz \
               -o "backup/data_backup_${timestamp}.tar.gz"
          
          if [ -s "backup/data_backup_${timestamp}.tar.gz" ]; then
            echo "备份成功完成"
          else
            echo "备份过程中没有找到.data目录或备份失败"
            rm -f "backup/data_backup_${timestamp}.tar.gz"
          fi
          
      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'gptdemomvp'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_57B881AC264A443E873FD5B027994B9B }}
          package: .
          
      - name: Restore .data directory
        run: |
          echo "恢复.data目录..."
          latest_backup=$(ls -t backup/data_backup_*.tar.gz 2>/dev/null | head -n1 || echo "")
          
          if [ -n "$latest_backup" ] && [ -f "$latest_backup" ]; then
            # 从发布配置文件中提取凭据
            publish_profile="${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_57B881AC264A443E873FD5B027994B9B }}"
            username=$(echo "$publish_profile" | grep -oP '(?<=userName=")[^"]*')
            password=$(echo "$publish_profile" | grep -oP '(?<=userPWD=")[^"]*')
            
            # 上传备份文件
            echo "上传备份文件..."
            curl -X PUT -s -u "$username:$password" \
                 --data-binary @"$latest_backup" \
                 https://gptdemomvp.scm.azurewebsites.net/api/vfs/site/data_backup_restore.tar.gz
            
            # 解压备份文件
            echo "执行恢复命令..."
            curl -s -u "$username:$password" https://gptdemomvp.scm.azurewebsites.net/api/command \
                 -d "{'command': 'bash -c \"cd /home/site/wwwroot && tar xzf /home/site/data_backup_restore.tar.gz && echo \\\"恢复完成\\\"\"'}" \
                 -H "Content-Type: application/json"
            
            echo "恢复操作已完成"
          else
            echo "没有找到备份文件，跳过恢复"
          fi
