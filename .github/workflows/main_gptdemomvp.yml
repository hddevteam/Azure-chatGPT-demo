# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - gptdemomvp

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI: true
      CLOUD_INSTANCE: ${{ vars.CLOUD_INSTANCE }}
      TENANT_ID: ${{ secrets.TENANT_ID }}
      CLIENT_ID: ${{ secrets.CLIENT_ID }}
      REDIRECT_URI: ${{ vars.REDIRECT_URI }}
      POST_LOGOUT_REDIRECT_URI: ${{ vars.POST_LOGOUT_REDIRECT_URI }}
      SCOPES: ${{ secrets.SCOPES }}
      GRAPH_API_ENDPOINT: ${{ vars.GRAPH_API_ENDPOINT }}
      EXPRESS_SESSION_SECRET: ${{ secrets.EXPRESS_SESSION_SECRET }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: npm install, build, and test
        run: |
          npm install
          npm run build

      - name: Archive build artifacts
        run: zip release.zip ./* -r
        
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Extract build artifacts
        run: unzip release.zip

      - name: Remove the archive file
        run: rm release.zip
          
      - name: Backup .data directory
        run: |
          echo "Creating backup of .data directory..."
          timestamp=$(date +%Y%m%d_%H%M%S)
          mkdir -p backup
          backup_file="backup/data_backup_${timestamp}.tar.gz.b64"
          backup_command="cd /home/site/wwwroot && if [ -d '.data' ]; then tar czf - .data | base64; fi"
          az webapp ssh -n gptdemomvp -g chatgptdemo-rg --cmd "$backup_command" > "$backup_file"
          if [ $? -ne 0 ]; then
            echo "Error backing up .data directory."
            exit 1
          fi
          
      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'gptdemomvp'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_57B881AC264A443E873FD5B027994B9B }}
          package: .
          
      - name: Restore .data directory
        run: |
          echo "Restoring .data directory..."
          latest_backup=$(ls -t backup/data_backup_*.tar.gz.b64 | head -n1)
          if [ -f "$latest_backup" ]; then
            restore_command="cd /home/site/wwwroot && cat <<'EOB' | base64 -d | tar xzf -
            $(cat $latest_backup)
            EOB"
            az webapp ssh -n gptdemomvp -g chatgptdemo-rg --cmd "$restore_command"
            if [ $? -ne 0 ]; then
              echo "Error restoring .data directory."
              exit 1
            fi
          else
            echo "No backup file found. Skipping restore."
          fi
